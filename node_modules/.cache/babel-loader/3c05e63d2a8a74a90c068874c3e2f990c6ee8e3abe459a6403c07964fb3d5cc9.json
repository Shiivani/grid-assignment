{"ast":null,"code":"var _jsxFileName = \"/home/myshubhlife/Documents/Personal/new/grid-assignment/src/ReactGridLayout/index.tsx\",\n  _s = $RefreshSig$();\nimport { numberToEnglish } from \"Utils\";\nimport useDynamicRefs from \"CustomHooks/useDynamicRefs\";\nimport \"./styles.scss\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReactGridLayout = ({\n  columns,\n  boxes\n}) => {\n  _s();\n  const [getRef, setRef] = useDynamicRefs();\n  useEffect(() => {\n    const targetColumns = Array.from({\n      length: boxes\n    }, (_, i) => getRef(`box-${i}`));\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          console.log(`${entry.target.innerHTML.toUpperCase()} WAS CALLED`);\n        }\n      });\n    });\n    targetColumns.forEach(target => observer.observe(target === null || target === void 0 ? void 0 : target.current));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid\",\n    children: Array.from({\n      length: boxes\n    }, (_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: setRef(`box-${i}`),\n      className: `box col-${columns}`,\n      children: numberToEnglish(i + 1)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(ReactGridLayout, \"58x46QC0ow88z2VMpYxcjlvxzRY=\", false, function () {\n  return [useDynamicRefs];\n});\n_c = ReactGridLayout;\nexport default ReactGridLayout;\nvar _c;\n$RefreshReg$(_c, \"ReactGridLayout\");","map":{"version":3,"names":["numberToEnglish","useDynamicRefs","useEffect","jsxDEV","_jsxDEV","ReactGridLayout","columns","boxes","_s","getRef","setRef","targetColumns","Array","from","length","_","i","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","console","log","target","innerHTML","toUpperCase","observe","current","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/myshubhlife/Documents/Personal/new/grid-assignment/src/ReactGridLayout/index.tsx"],"sourcesContent":["import {numberToEnglish} from \"Utils\";\nimport useDynamicRefs from \"CustomHooks/useDynamicRefs\";\nimport \"./styles.scss\";\nimport {Ref, RefObject, useEffect} from \"react\";\ninterface Props {\n  columns: number;\n  boxes: number;\n}\n\nconst ReactGridLayout = ({columns, boxes}: Props) => {\n  const [getRef, setRef] = useDynamicRefs();\n\n  useEffect(() => {\n    const targetColumns = Array.from({length: boxes}, (_, i) =>\n      getRef(`box-${i}`),\n    );\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          console.log(`${entry.target.innerHTML.toUpperCase()} WAS CALLED`);\n        }\n      });\n    });\n    targetColumns.forEach((target) =>\n      observer.observe(target?.current as Element),\n    );\n  }, []);\n\n  return (\n    <div className=\"grid\">\n      {Array.from({length: boxes}, (_, i) => (\n        <div\n          ref={setRef(`box-${i}`) as RefObject<HTMLDivElement>}\n          className={`box col-${columns}`}\n          key={i}\n        >\n          {numberToEnglish(i + 1)}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ReactGridLayout;\n"],"mappings":";;AAAA,SAAQA,eAAe,QAAO,OAAO;AACrC,OAAOC,cAAc,MAAM,4BAA4B;AACvD,OAAO,eAAe;AACtB,SAAwBC,SAAS,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMhD,MAAMC,eAAe,GAAGA,CAAC;EAACC,OAAO;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAM,CAACC,MAAM,EAAEC,MAAM,CAAC,GAAGT,cAAc,CAAC,CAAC;EAEzCC,SAAS,CAAC,MAAM;IACd,MAAMS,aAAa,GAAGC,KAAK,CAACC,IAAI,CAAC;MAACC,MAAM,EAAEP;IAAK,CAAC,EAAE,CAACQ,CAAC,EAAEC,CAAC,KACrDP,MAAM,CAAE,OAAMO,CAAE,EAAC,CACnB,CAAC;IACD,MAAMC,QAAQ,GAAG,IAAIC,oBAAoB,CAAEC,OAAO,IAAK;MACrDA,OAAO,CAACC,OAAO,CAAEC,KAAK,IAAK;QACzB,IAAIA,KAAK,CAACC,cAAc,EAAE;UACxBC,OAAO,CAACC,GAAG,CAAE,GAAEH,KAAK,CAACI,MAAM,CAACC,SAAS,CAACC,WAAW,CAAC,CAAE,aAAY,CAAC;QACnE;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IACFhB,aAAa,CAACS,OAAO,CAAEK,MAAM,IAC3BR,QAAQ,CAACW,OAAO,CAACH,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEI,OAAkB,CAC7C,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEzB,OAAA;IAAK0B,SAAS,EAAC,MAAM;IAAAC,QAAA,EAClBnB,KAAK,CAACC,IAAI,CAAC;MAACC,MAAM,EAAEP;IAAK,CAAC,EAAE,CAACQ,CAAC,EAAEC,CAAC,kBAChCZ,OAAA;MACE4B,GAAG,EAAEtB,MAAM,CAAE,OAAMM,CAAE,EAAC,CAA+B;MACrDc,SAAS,EAAG,WAAUxB,OAAQ,EAAE;MAAAyB,QAAA,EAG/B/B,eAAe,CAACgB,CAAC,GAAG,CAAC;IAAC,GAFlBA,CAAC;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGH,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAhCIH,eAAe;EAAA,QACMJ,cAAc;AAAA;AAAAoC,EAAA,GADnChC,eAAe;AAkCrB,eAAeA,eAAe;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}